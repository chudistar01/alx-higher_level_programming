============================
How to Use 3-say_my_name.py
===========================

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first name> <last name>".

::
	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Igwebuike", "Christian")
	My name is Igwebuike Christian

::
	>>> say_my_name("Chinua Achebe", "Chinua")
	My name is Chinua Achebe Chinua

The parameter ```last_name``` is optional. if not provided an empty
is printed

::
	say_my_name("Chris")
	My name is Beta 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Othherwise
a TypeError is raised

::
	>>> say_my_name(6, "Micheal")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::
	
	>>> say_my_name("Micheal", ["xyz", "yzx"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::
	
	>>> say_my_name({"Lebron": 6, "james": 23}, 7.7)
	Traceback (most recent call last):
	TypeError: first_name must be a string

::
	
	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

At least one name must be string

::
	
	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

